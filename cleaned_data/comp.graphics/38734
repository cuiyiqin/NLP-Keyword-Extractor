<email> robert lansdale subject advice sought turning font outlines renderable polygons organization csri university toronto distribution na lines <number> seeking alternate solutions turn postscript type <number> truetype font outline polygons subsequently scan converted 0d scanline renderer studying problem font conversion years never need implement system well opportunity write font rendering software would like questions answered jump deep end main problem face use evenodd nonwinding rules turn outlines single outline polygon renderer handle complex polygons need reduce polygons simple polygons example letter o two outlines <number> outside outline clockwise truetype font <number> inside outline counterclockwise one common solution used number rendering packages simply connect inner outline outer outline point two outlines closest equivalent descibing polygon holes renderer make appropriate hole since interior polygon edges opposite direction outside edges want use simplistic system since <number> handle outline fonts properly simple matter connect outer outline inner outline fancy fonts <number> properly handle evenodd nonwinding rules research years proper solution use trapezoid decomposition algorithm scan convert outlines trapezoids done postscript truetype font rasterizers trapezoidal polygons easily properly rendered 0d scanline renderer question better solutions turning outlines polgyons trapezoid decomposer fond solution since creates excess number polygons another question know best algorithm create bevelled andor offset curves font outlines dozen papers subjects cant tell method best implement thanks pointers > rob lansdale robert lansdale <phone> dynamic graphics project internet <email> computer systems research institute uucp uunetdgptorontoedulansd university toronto bitnet <email> toronto ontario m0s 0a0 canada