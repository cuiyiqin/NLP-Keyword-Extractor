<email> landon c noll subject 00th international obfuscated c code contest opening part <number> <number> articleid toad00000 expires <number> may <number> <number><number><number> gmt replyto <email> landon c noll distribution world organization nebula consultants san francisco lines <number> enclosed rules guidelines related information 00th international obfuscated c code contest part <number> <number> part shar file enjoy chongo <landon curt noll> oolarry bassel == binsh part <number> multipart archive ============= mkentryc ============== echo x extracting mkentryc text sed ^x << shareof > mkentryc x mkentryc <number> <number><number><number> <number><number><number> x x copyright c landon curt noll larry bassel <number> x rights reserved permission personal education nonprofit use x granted provided copyright notice included x entirety remains unaltered uses must receive prior x permission writing landon curt noll larry bassel x x x mkentry make international obfuscated c code contest entry x x usage x mkentry r remarks b build p progc o iocccentry x x r remarks file remarks entry x b build file containing progc built x p progc obfuscated program source file x o iocccentry ioccc entry output file x x compile x cc mkentryc o mkentry x x x placed public domain landon curt noll <number> x x software provided without express implied x warranties including without limitation implied warranties x merchantability fitness particular purpose x x x warning x x program attempts implement ioccc rules every attempt x made make sure program produces entry x conforms contest rules cases program x differs contest rules contest rules used x sure check contest rules submitting entry x x send questions comments entries contest x x sunpacbelluunetpyramidhoptoadjudges x <email> x rules guidelines may often change year x year sure current rules guidelines x prior submitting entries obtain <number> send email x address use subject send rules x x contest rules change year year one use x program year intended sure ruleyear x define matches current year x x xinclude <stdioh> xinclude <ctypeh> xinclude <timeh> xinclude <systypesh> xinclude <sysstath> x x logic xifndef true x define true <number> xendif true xifndef false x define false <number> xendif false xdefine eofok true xdefine eofnotok false x x global limits xdefine ruleyear <number> note match current year xdefine startdate 0mar00 <number><number> utc first confirmation received xdefine maxcol <number> max column line hit xdefine maxbuildsize <number> max build size xdefine maxprogramsize <number> max program source size xdefine maxprogramsize0 <number> max program source size counting x whitespace followed x whitespace eof xdefine maxtitlelen <number> max chars title xdefine maxentrylen <number> max length entry input line xdefine maxentry <number> max number entries per person per year xdefine maxfilelen <number> max filename length info file x x send entries xdefine entryaddr0 applepyramidsunuunethoptoadobfuscate xdefine entryaddr0 <email> x x uuencode process assumes ascii xdefine uuencodec encodestrintc0xff xdefine uuencodelen <number> max uuencode chunk size xdefine uuinfomode <number> mode info files uuencode file xdefine uubuildmode <number> mode build files uuencode file xdefine uubuildname build name build files uuencode file xdefine uuprogmode <number> mode programs uuencode file xdefine uuprogname progc name programs uuencode file x x encodestrcharval uuencoded character val xchar encodestr<number>+<number> = <cur>+<phone><=>abcdefghijklmnopqrstuvwxyz^ <cur>+<phone><=>abcdefghijklmnopqrstuvwxyz^ <cur>+<phone><=>abcdefghijklmnopqrstuvwxyz^ <cur>+<phone><=>abcdefghijklmnopqrstuvwxyz^ x x global declarations xchar program name xlong starttime startup time x x forward declarations xvoid parseargs xvoid usage xfile openremark xfile openbuild xfile openprogram xfile openoutput xvoid outputentry xvoid outputremark xvoid outputauthor xvoid outputinfo xvoid outputbuild xvoid outputprogram xvoid outputend xint getline xvoid outputtilldot xint collen xvoid checkio xvoid uuencode x xmainargc argv x int argc arg count x char argv args x x file remark=null open remarks stream x file build=null open build file stream x file prog=null open program stream x file output=null open output stream x char rname=null file remarks entry x char bname=null file containing progc built x char pname=null obfuscated program source file x char oname=null ioccc entry output file x struct tm tm startup time structure x x x check year x x starttime = timelong <number> x tm = gmtimestarttime x tm>tmyear = ruleyear<number> x fprintfstderr x warning program applies d may differ d x argv<number> ruleyear <number>+tm>tmyear x x x x parse command line args x x parseargsargc argv rname bname pname oname x x x opencheck input output files x x open truncate output file first case x one input files x x output = openoutputoname x remark = openremarkrname x build = openbuildbname x prog = openprogrampname x output==null || remark==null || build==null || prog==null x exit<number> x x x x output section x x outputentryoutput oname x outputremarkoutput oname remark rname x outputauthoroutput oname x outputinfooutput oname x outputbuildoutput oname build bname x outputprogramoutput oname prog pname x outputendoutput oname x x x flush output x x fflushoutput == eof x fprintfstderr flush error program oname x perror x exit<number> x x x x final words x x printf entry found check file x oname x printfcorrect problems verify uudecode utility x printfcorrectly decode build file program x printfthis program provided guide submitters x printfcases conflicts rules rules shall apply x printfit responsibility ensure entry conforms x printfthe current rules x printfemail entries x printf entryaddr0 x printf entryaddr0 x printfplease use following subject email entry x printf ioccc entry x done x exit<number> x x x x parseargs parse command line args x x given command line args function parses sets x required name flags function return command x line syntax correct x xvoid xparseargsargc argv rname bname pname oname x int argc arg count x char argv args x char rname file remarks entry x char bname file containing progc built x char pname obfuscated program source file x char oname ioccc entry output file x x char optarg flag option operand x int flagname name flag x int x x x everyone getopt must parse args hand x x program = argv<number> x =<number> < argc ++ x x determine flagname x argvi<number> = x usage<number> x notreached x x flagname = intargvi<number> x x determine flags operand x flagname = argvi<number> = x optarg = argvi<number> x else x +<number> >= argc x usage<number> x notreached x else x optarg = argv++ x x x x save flags operand correct global variable x switch flagname x case r x rname = optarg x break x case b x bname = optarg x break x case p x pname = optarg x break x case o x oname = optarg x break x default x usage<number> x notreached x x x x x verify required flags x x rname == null || bname == null || pname == null || oname == null x usage<number> x notreached x x return x x x x usage print usage message exit x x function return x xvoid xusageexitval x int exitval exit value x x fprintfstderr x usage r remarks b build p progc o iocccentry program x fprintfstderr r remarks file remarks entry x fprintfstderr b build file containing progc built x fprintfstderr p progc obfuscated program source file x fprintfstderr o iocccentry ioccc entry output file x exitexitval x x x x openremark opencheck remark file x x remark file indented <number> spaces extend x beyond column maxcol requirements warn x x function returns null io format error x xfile xopenremarkfilename x char filename x x file stream opened file stream x char bufbufsiz+<number> input buffer x int toolong=<number> number lines long x int nonindent=<number> number lines indented <number> spaces x x x open remark input file x x stream = fopenfilename r x stream == null x fprintfstderr cannot open remark file x program filename x perror x returnnull x x x x look line x x fgetsbuf bufsiz stream = null x x count lines start <number> spaces x buf<number> = strncmpbuf <number> = <number> x ++nonindent x x x count long lines x collenbuf > maxcol x found line long x ++toolong x x x x watch io errors x checkiostream filename eofok x x note long lines needed x toolong > <number> x fprintfstderr x warning d lines extend beyond 00th column x program toolong filename x fprintfstderr x ok would nice avoid x program x x x note nonindented lines needed x nonindent > <number> x fprintfstderr x warning d lines indented <number> spaces x program nonindent filename x fprintfstderr x ok would nice avoid x program x x x return open file x rewindstream x returnstream x x x x openbuild opencheck build file x x build file must longer maxbuildsize bytes x x function returns null io size error x xfile xopenbuildfilename x char filename x x file stream opened file stream x struct stat statbuf status open file x x x open build input file x x stream = fopenfilename r x stream == null x fprintfstderr cannot open build file x program filename x perror x returnnull x x x x determine size file x x fstatfilenostream statbuf < <number> x fprintfstderr cannot stat build file x program filename x perror x returnnull x x statbufstsize > maxbuildsize x fprintfstderr x fatal build file d bytes long x program filename statbufstsize x fprintfstderr x may longer d bytes x program maxbuildsize x returnnull x x x return open file x returnstream x x x x openprogram opencheck program source file x x program source file must <= <number> bytes number x nonwhitespace chars followed whitespace must x <= <number> bytes x x function returns null io size error x xfile xopenprogramfilename x char filename x x file stream opened file stream x struct stat statbuf status open file x int count special count size x int c character read x x x open program source input file x x stream = fopenfilename r x stream == null x fprintfstderr cannot open program source file x program filename x perror x exit<number> x x x x determine size file x x fstatfilenostream statbuf < <number> x fprintfstderr cannot stat program source file x program filename x perror x returnnull x x statbufstsize > maxprogramsize x fprintfstderr x fatal program source file d bytes long x program filename statbufstsize x fprintfstderr x may longer d bytes x program maxprogramsize x returnnull x x x x count nonwhitespace non followed whitespace chars x x count = <number> x c = <number> x c=fgetcstream = eof x look nonwhitespace x isasciic || isspacec x switch c x case count followed eof whitespace x case x case x peek next char x c = fgetcstream x c = eof isasciic isspacec x followed whitespace eof count x ungetcc stream x ++count x x break x default x ++count x break x x x x x watch io errors x checkiostream filename eofok x x look special size x count > maxprogramsize0 x fprintfstderr x fatal number bytes nonwhitespace x program x fprintfstderr x followed whitespace x program x fprintfstderr x eof must <= d bytes x program maxprogramsize0 x fprintfstderr x d bytes found x program filename count x returnnull x x x return open file x rewindstream x returnstream x x x x openoutput opencheck entry output file x x function returns null open error x xfile xopenoutputfilename x char filename x x file stream opened file stream x x x open ioccc entry output file x x stream = fopenfilename w x stream == null x fprintfstderr cannot open ioccc entry file output x program filename x perror x exit<number> x x x return open file x returnstream x x x x outputentry output entry section x x read needed information form stdin write entry section x xvoid xoutputentryoutput oname x file output entrys output file stream x char oname name output file x x char titlemaxtitlelen+<number>+<number> entrys title x char bufmaxcol+<number>+<number> io buffer x int entry=<number> entry number x int ret fields processed fscanf x int okline=<number> <number> => line ok x char skip input skip x file datepipe pipe date command x timet epochsec seconds since epoch x char p x x x write start section x x fprintfoutput entry x checkiooutput oname eofnotok x x x write rule year x x fprintfoutput rule d ruleyear x checkiooutput oname eofnotok x x determine fix x printfis fix update resubmittion x printfprevious entry enter y n x getlinebuf <number>+<number> <number> <= <number> || buf<number>==y || buf<number>==n x printf please answer y n x x buf<number> == y x fprintfoutput fix y x checkiooutput oname eofnotok x printf sure title entry number give x printfare entry replacing x else x fprintfoutput fix n x checkiooutput oname eofnotok x x x x write title x x printf title must match expression azaz00= character x printffollowed <number> d azaz00=+ characters x maxtitlelen<number> x printfit suggested required title x printfincorporate username x printfcase multiple authors consider using parts usernames x printfof authors x printfenter title x x prompt read line x okline = getlinetitle maxtitlelen+<number> maxcol<number> <= <number> x printf title long please reenter x continue x x x verify pattern everyone regexp hand x isasciiinttitle<number> || x isalnuminttitle<number> || title<number> == || title<number> == = x printf invalid first character title x printfenter title x okline = <number> x else x p=title<number> p = p = ++p x isasciiintp || x isalnumintp || x p == || p == = || p == + || p == x printf invalid character title x printfenter title x okline = <number> x x x x okline <= <number> x fprintfoutput title title x checkiooutput oname eofnotok x x x write entry number x x printf person may submit d entries per year x maxentry x printfenter entry number <number> d inclusive maxentry<number> x x get valid input line x fflushstdout x ret = fscanfstdin d entry x checkiostdin stdin eofnotok x skip input newline found x x skip = fgetcstdin x checkiostdin stdin eofnotok x skip = x bad text input invalidate entry number x entry = <number> x x skip = x x check number range x ret = <number> || entry < <number> || entry > maxentry<number> x printf x entry number must <number> d inclusive x maxentry<number> x printfenter entry number x x ret = <number> || entry < <number> || entry > maxentry<number> x fprintfoutput entry d entry x checkiooutput oname eofnotok x x x write submission date x x returns newline x epochsec = timenull x fprintfoutput date asctimegmtimeepochsec x checkiooutput oname eofnotok x x x write osmachine host information x x printf x enter machines oss entry tested x outputtilldotoutput oname host x x x x outputremark output remark section x x read needed information form stdin write entry section x xvoid xoutputremarkoutput oname remark rname x file output entrys output file stream x char oname name output file x file remark stream file containing remark text x char rname name remark file x x char bufbufsiz+<number> inputoutput buffer x x x write start section x x fprintfoutput remark x checkiooutput oname eofnotok x x x copy remark file section x x fgetsbuf bufsiz remark = null x fputsbuf output x checkiooutput oname eofnotok x x checkioremark rname eofok x x sure remark section ends newline x bufstrlenbuf<number> = x fputc output x checkiooutput oname eofnotok x x x x x outputauthor output author section x x read needed information stdin write author section x multiple authors exist multiple author sections written x xvoid xoutputauthoroutput oname x file output entrys output file stream x char oname name output file x x char bufmaxcol+<number>+<number> io buffer x int moreauths true => authors note x int authcnt=<number> number authors processed x x x prompt user author section x x printf enter information author entry x printfs contest deadline judges startdate x printfwill attempt email back confirmation first author x x x place author information author individual section x x x x write start section x fprintfoutput author x checkiooutput oname eofnotok x x write author x printf author d name ++authcnt x getlinebuf maxcol+<number> maxcol<number> <= <number> x printf name long please reenter x x fprintfoutput name buf x checkiooutput oname eofnotok x x write organization x printf enter schoolcompanyorganization author d x authcnt x printf author d org authcnt x getlinebuf maxcol+<number> maxcol<number> <= <number> x printf line long please reenter x x fprintfoutput org buf x checkiooutput oname eofnotok x x write address x printf x enter postal address author d sure include x authcnt x printfyour country include name x outputtilldotoutput oname addr x x write email address x printf x enter email address author d use address x authcnt x printf x registered domain well known site give several x printfforms list one per line x outputtilldotoutput oname email x x write anonymous status x printf author d remain anonymous enter y n x authcnt x getlinebuf <number>+<number> <number> <= <number> || buf<number>==y || buf<number>==n x printf please answer y n x x fprintfoutput anon buf x checkiooutput oname eofnotok x x determine another author x printf another author enter y n x getlinebuf <number>+<number> <number> <= <number> || buf<number>==y || buf<number>==n x printf please answer y n x x buf<number> == y x moreauths = true x else x moreauths = false x x moreauths == true x return x x x x outputinfo output info sections x x read needed information stdin write info section x multiple info files exist multiple info sections written x xvoid xoutputinfooutput oname x file output entrys output file stream x char oname name output file x x char infonamemaxfilelen+<number> filename buffer x char yorn<number>+<number> y n answer x char uuname name uuencode x file infile info file stream x x x prompt user info information x x printf info files used supplement entry x printffor example info files may provide sample input detailed x printfinformation entry supplemental x printfthe entry require exist x x x another info file save uuencode x x printfdo info file include enter y n x getlineyorn <number>+<number> <number> <= <number> || yorn<number>==y || yorn<number>==n x printf please answer y n x x yorn<number> == y x x read filename x printf enter info filename x getlineinfoname maxfilelen+<number> <number> <= <number> x printf info filename long please reenter x x x compute basename info filename x remove trailing newline x uuname = infonamestrleninfoname<number> x uuname = x avoid rindexshrrchr compat issues hand x uuname uuname > infoname uuname x uuname == x ++uuname x break x x x x attempt open info file x infile = fopeninfoname r x infile == null x fprintfstderr cannot open info file x program infoname x perror x continue x x x x write start section x x fprintfoutput info x checkiooutput oname eofnotok x x uuencode info file x uuencodeoutput oname infile infoname uuinfomode uuname x x printf another info file include enter y n x getlineyorn <number>+<number> <number> <= <number> || yorn<number>==y || yorn<number>==n x printf please answer y n x x x return x x x x outputbuild output build section x x read needed information stdin write build section x xvoid xoutputbuildoutput oname build bname x file output entrys output file stream x char oname name output file x file build open build file stream x char bname name build file x x x write start section x x fprintfoutput build x checkiooutput oname eofnotok x x x uuencode program file x x uuencodeoutput oname build bname uubuildmode uubuildname x return x x x x outputprogram output program section x x read needed information form stdin write program section x xvoid xoutputprogramoutput oname prog pname x file output entrys output file stream x char oname name output file x file prog open program stream x char pname name program file x x x write start section x x fprintfoutput program x checkiooutput oname eofnotok x x x uuencode program file x x uuencodeoutput oname prog pname uuprogmode uuprogname x return x x x x outputend output end section x x read needed information form stdin write end section x xvoid xoutputendoutput oname x file output entrys output file stream x char oname name output file x x x write final section terminator x x fprintfoutput end x checkiooutput oname eofnotok x return x x x x getline get answer stdin x x function flush stdout case prompt pending x read answer x x function returns <number> line long length x line including newline line ok function x return error eof x xint xgetlinebuf siz maxcol x char buf input buffer x int siz length input including newline x int maxcol max col allowed <number> => disable check x x int length length input line x x flush terminal output x fflushstdout x x read line x fgetsbuf siz+<number> stdin == null x report problem x checkiostdin stdin eofnotok x x x look newline x length = strlenbuf x buflength<number> = x int eatchar char eaten x x newline found line must long eat rest line x x eatchar = fgetcstdin x eatchar = eof eatchar = x checkiostdin stdin eofnotok x x report situation x return <number> x x x watch long lines needed x maxcol > <number> length > maxcol || collenbuf > maxcol x report situation x return <number> x x x return length x return length x x x x outputtilldot output set lines read x x routine read set lines including x single line read format output x x leader first line x next line x next line x x x routine return io error eof x xvoid xoutputtilldotoutput oname leader x file output entrys output file stream x char oname name output file x char leader lead text first line x x char bufbufsiz+<number> input buffer x int count lines read x int done=false true => finished reading input x x instruct user input x printf end input enter line single period x x read lines eof x count = <number> x done x issue prompt x printfs count><number> leader x fflushstdout x x get line x getlinebuf bufsiz maxcol<number> <= <number> x printf line long please reenter x continue x x x note read x strcmpbuf == <number> x done = true x x x write line read something x done x fprintfoutput count++><number> leader buf x checkiooutput oname eofnotok x x x x lines read least output something x count <= <number> x fprintfoutput leader x checkiooutput oname eofnotok x x return x x x x collen determine highest string would reach x x given string routine returns string would reach x string printed column <number> tab stops assumed x start <number> <number> <number> <number> x xint xcollenstring x char string string examine x x int col current column x char p current char x x scan string x col=<number> p=string p = p = ++p x note column shift x col = p== <number>+col+<number><number><number> col+<number> x x p == x col x x x return highest column x return col x x x x checkio check eof io error stream x x return eof io error x xvoid xcheckiostream name eofok x file stream stream check x char name name stream x int eofok eofok eofnotok x x test io error x ferrorstream x fprintfstderr error program name x perror x exit<number> x x test eof x else eofok == eofnotok feofstream x fprintfstderr eof program name x exit<number> x x return x x x x uuencode uuencode file x x perform uuencoding process identical process performed x uuencode<number> utility x x routine implements algorithm described uuencode<number> x <number>0bsd reno man page x xvoid xuuencodeoutput oname infile iname umode uname x file output output file stream x char oname output filename x file infile input file stream x char iname input filename x int umode mode put uuencode file x char uname name put uuencode file x x char bufuuencodelen+<number> uuencode buffer x int readlen actual number chars read x int val <number> bit chunk buf x char filler= filler uuencode pad text x char p x x x output initial uuencode header x x fprintfoutput begin o umode uname x checkiooutput oname eofnotok x x x clear input buffer x x p=buf p < bufsizeofbufsizeofbuf<number> ++p x p = x x x x process uuencodelen chars time forming x single output line time x x readlen=freadbufsizeofbuf<number>uuencodeleninfile > <number> x x x first character length character x x fputcuuencodereadlen output x checkiooutput oname eofnotok x x x convert <number> bits time thus convert x <number> sets <number> bits <number> sets uuencoded <number> bits x x p=buf readlen><number> readlen=<number> p+=<number> x x bits <number> <number> x val = p<number>>><number>0x0f x fputcuuencodeval output x checkiooutput oname eofnotok x x bits <number> <number> x val = p<number><<<number>0x00 | p<number>>><number>0x0f x fputcuuencodeval output x checkiooutput oname eofnotok x x bits <number> <number> x val = p<number><<<number>0x0c | p<number>>><number>0x00 x fputcuuencodeval output x checkiooutput oname eofnotok x x bits <number> <number> x val = p<number>0x0f x fputcuuencodeval output x checkiooutput oname eofnotok x x x end uuencodelen line x fputc output x checkiooutput oname eofnotok x x x clear input buffer dont depend bzero memset x x p=buf p < bufsizeofbufsizeofbuf<number> ++p x p = x x x x check last read input file x checkioinfile iname eofok x x write end uuencode file x fprintfoutput c end uuencodefiller x checkiooutput oname eofnotok x shareof chmod <number> mkentryc || echo restore mkentryc failed set wc c mkentrycwcc=<cur><number> test <cur>wcc = <number> echo original size <number> current size <cur>wcc fi ============= obfuscateinfo ============== echo x extracting obfuscateinfo text sed ^x << shareof > obfuscateinfo x0000 obfuscated contest information x xcopyright c landon curt noll larry bassel <number> xall rights reserved permission personal education nonprofit use xgranted provided copyright notice included entirety xand remains unaltered uses must receive prior permission writing xfrom landon curt noll larry bassel x xthe international obfuscated c code contest ioccc sprit xcooperation willing mention programming contents space xpermits x xhow contest included file x x wish ioccc judges include contest file x send request x x <email> x x request contest descriptions limited <number> lines x exceed <number> bytes typically request contest x include current description ioccc x x order included file given year must x receive current description earlier jan <number> <number><number><number> utc x later feb <number> <number><number><number> utc agreement publish x contest must also obtained prior feb <number> annual contests x fail submit new entry dropped file x xofficial disclaimer pardon officialese x x contents noted ioccc affiliated x ioccc endorsed ioccc reserve x right refuse print information given contest x x information provided particular contest x organizers printed permission please contact x contest organizers directly regarding contents x xwith official notice given present enjoyment following xinformation contents x x x x 00th international obfuscated c contest x x original obfuscated contest x x obfuscate trv cated cating cates <number> render obscure x b darken <number> confuse emotions obfuscated x judgment llat obfuscare darken obintensive + x lat fuscare darken < fuscus dark obfuscation n x obfuscatory adj x x goals contest x x write obscureobfuscated c program rules x show importance programming style ironic way x stress c compilers unusual code x illustrate subtleties c language x provide safe forum poor c code x x ioccc grandfather usenet programming contests since x <number> contest demonstrated program mearly works x correctly sufficient ioccc also done much add x arcane word obfuscated back english language x see new hackers dictionary eric raymond x x strongly encouraged read new contest rules x sending entries rules sometimes contest email x address change time valid entry one year may x rejected later year due changes rules typical x start date contests early march contest rules normally x finalized posted beginning contest typical x closing date contests early may x x contest rules posted compunixwizards complangc x miscmisc altsources compsourcesd access x groups missed early march posting may x request copy judges via email x x <email> sunuunetutzoopyramidhoptoadjudges x x previous contest winners available via anonymous ftp x ftpuunet directory pubioccc x x x x 0th international obfuscated perl contest x landon noll larry wall x x content planned someday landon larry x busy actually get around posting first set rules x x landon says yes know said would contest <number> x existing projects got way hopefully x something developed nov <number> x x x x 0nd international obfuscated postscript contest x jonathan monsarrat <email> x alena lacova <email> x x contest programming skills knowledge exclusively x postscript programming language purpose x x spread knowledge postscript details x applaud best tricks x prove humans beat damnable machine generators x game writing obscure mysterious postscript x programs ever x x winners receive fame attention goes x program entry posted winner programmers worldwide x x <number> contest rules results available ftp x wilmacsbrownedupubpostscriptobfuscatedshar individually x obfuscated directory judges post <number> rules x november complangpostscript usenet places x send questions <email> x x categories include best obfuscated postscript best artwork x compact best interactive program useful x anything unusual creative deserves award x x judges choose winners category x x alena lacova system administrator nikhef institute high x energy nuclear physics netherlands author x postscript chaos programs draw julia sets mandelbrot sets x kinds fractal functions x x jonathan monsarrat graduate student mit brown university x usa faq maintainer usenet newsgroup x complangpostscript author postscript zone lametex x x shareof chmod <number> obfuscateinfo || echo restore obfuscateinfo failed set wc c obfuscateinfowcc=<cur><number> test <cur>wcc = <number> echo original size <number> current size <cur>wcc fi exit <number> sunnyvale residents vote landon noll sunnyvale city council seat <number>