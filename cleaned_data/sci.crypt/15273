<email> john ioannidis subject re source random bits unix workstation organization columbia university department computer science lines <number> article <<email> <email> bennett todd salomon brothers inc ny writes > > heard solution sounded good heard folks > experiencing times <number><number> seconds run >reasonablyconfigured workstations im willing add much delay > someones login process approach etherfind|compress skip 00k takes > second two run im considering writing beall endall >solutions launches md0 simultaneously tries suck bits > net net sitting idle cant get 00k > compression md0 finishes use md0 way could >guaranteed good bits deterministic upper bound login time >still common case login take couple extra seconds > <number> seconds hash 00m core bet know source information acceptable part login process going use network traffic source pseudorandom information right thing pass cryptographic hash function compressor aside fact run faster give better results think cryptographic hash function distills randomness something along lines etherfind x n | dd bs=0k count=<number> <number>>devnull | md0 trick gives timestamps lack u makes sure dd get ten lines opposed ten k takes couple seconds lightlyloaded ethernet >bennett ><email> ji