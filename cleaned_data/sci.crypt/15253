<email> subject cryptography faq <number><number> public key cryptography organization crypt cabal lines <number> expires <number> may <number> <number><number><number> gmt replyto <email> nntppostinghost padthaiaktiscom summary part <number> <number> scicrypt faq public key cryptography basics publickey cryptography rsa version security speed factoring approaches xlastupdated <number><number><number> archivename cryptographyfaqpart00 lastmodified <number><number><number> faq scicrypt part <number> publickey cryptography sixth ten parts scicrypt faq parts mostly independent read first part rest dont time send missing parts mail dont ask notes kah00 refer reference list last part sections faq available via anonymous ftp rtfmmitedu pubusenetnewsanswerscryptographyfaqpartxx cryptography faq posted newsgroups scicrypt scianswers newsanswers every <number> days contents publickey cryptography whats rsa rsa secure fast people factor numbers publickey cryptosystems publickey cryptography classic cryptosystem encryption functions ek decryption functions dk dkekp = p plaintext p publickey cryptosystem ek easily computed public key x turn computed k x published anyone encrypt messages dk cannot easily computed x person generated k decrypt messages thats essence publickey cryptography published diffie hellman <number> classic cryptosystem want friends able send secret messages make sure nobody sees key k publickey cryptosystem publish x dont worry spies beginning publickey cryptography extensive literature security models publickey cryptography applications publickey cryptography applications mathematical technology behind publickey cryptography whats rsa rsa publickey cryptosystem defined rivest shamir adleman full details faq available ftp rsacom heres small example plaintexts positive integers <number>^<number> keys quadruples pqed p <number>bit prime number q <number>bit prime number d e large numbers de <number> divisible p<number>q<number> define ekp = p^e mod pq dkc = c^d mod pq ek easily computed pair pqebut far anyone knows easy way compute dk pair pqe whoever generates k publish pqe anyone send secret message one read messages rsa secure nobody knows obvious attack rsa factor pq p q see comments fast stateoftheart factorization algorithms run unfortunately nobody slightest idea prove factorizationor realistic problem matteris inherently slow easy formalize mean rsa isisnt strong hendrik w lenstra jr says exact definitions appear necessary one wishes prove algorithms certain properties exist theoretical computer science notoriously lacking negative results fast people factor numbers depends size numbers october <number> arjen lenstra dan bernstein factored <number>^<number> <number> primes using three weeks maspar time maspar <number>processor simd machine processor add <number> integers per second algorithm called number field sieve quite bit faster special numbers like <number>^<number> <number> general numbers n takes time expolog^<number><number> n log^<number><number> log n case older popular method smaller numbers multiple polynomial quadratic sieve takes time expolog^<number><number> n log^<number><number> log nfaster number field sieve small n slower large n breakeven point somewhere <number> <number> digits depending implementations factorization fastmoving fieldthe state art years ago nowhere near good new methods developed <number>bit rsa keys always safe factorization one cant predict future number field sieve found many people conjectured quadratic sieve asymptotically fast factoring method could publickey cryptosystems weve talked rsa well known easy describe lots publickey systems around many faster rsa depend problems widely believed difficult brief introduction really want learn many facets publickey cryptography consult books journal articles listed part <number>