<email> subject cryptography faq <number><number> mathematical cryptology organization crypt cabal lines <number> expires <number> may <number> <number><number><number> gmt replyto <email> nntppostinghost padthaiaktiscom summary part <number> <number> scicrypt faq mathematical cryptology privatekey systems types attacks bruteforce cyphertext plaintext etc mathematical formulation cryptography security onetime pads xlastupdated <number><number><number> archivename cryptographyfaqpart00 lastmodified <number><number><number> faq scicrypt part <number> mathematical cryptology fourth ten parts scicrypt faq parts mostly independent read first part rest dont time send missing parts mail dont ask notes kah00 refer reference list last part sections faq available via anonymous ftp rtfmmitedu pubusenetnewsanswerscryptographyfaqpartxx cryptography faq posted newsgroups scicrypt scianswers newsanswers every <number> days contents mathematical terms privatekey cryptosystem attack whats advantage formulating mathematically onetime pad secure whats ciphertextonly attack whats knownplaintext attack whats chosenplaintext attack mathematical terms say bruteforce attacks whats keyguessing attack whats entropy mathematical terms privatekey cryptosystem privatekey cryptosystem consists encryption system e decryption system d encryption system e collection functions ek indexed keys k mapping set plaintexts p set ciphertexts c similarly decryption system d collection functions dk dkekp = p every plaintext p succesful decryption ciphertext plaintext accomplished using key index used corresponding encryption plaintext ciphertext systems wherein key value used encrypt decrypt also known symmetric cryptoystems attack intuitive terms passive attack cryptosystem method starting information plaintexts corresponding ciphertexts unknown key figuring information plaintexts possible state mathematically means go fix functions f g h n variables fix encryption system e fix distribution plaintexts keys attack e using g assuming f giving h probability p algorithm pair f g inputs one output h probability p computing h = hp0pn f = fp0pn g = gekp0ekpn note probability depends distribution vector kp0pn attack trivial pointless probability least p computing h = hp0pn f = fp0pn g = gc0cn c0cn range uniformly possible ciphertexts particular relation p0pn words attack trivial doesnt actually use encryptions ekp0ekpn attack called oneciphertext n = <number> twociphertext n = <number> whats advantage formulating mathematically basic cryptology never prove cryptosystem secure read part <number> keep saying strong cryptosystem must property property guarantee cryptosystem strong contrast purpose mathematical cryptology precisely formulate possible prove statement cryptosystem strong say example cryptosystem secure passive attacks nontrivial attack system defined slow practical prove statement confidence cryptosystem resist passive cryptanalytic technique reduce statement wellknown unsolved problem still confidence cryptosystem isnt easy break parts cryptology also amenable mathematical definition point explicitly identify assumptions making prove produce desired results figure means particular cryptosystem used properly means assumptions valid methodology useful cryptanalysis cryptanalyst take advantage incorrect assumptions often try construct proof security system see proof fails use failures starting points analysis onetime pad secure definition onetime pad cryptosystem plaintexts ciphertexts keys strings say byte strings length m ekp sum lets say exclusive k p easy prove mathematically nontrivial singleciphertext attacks onetime pad assuming uniform distribution keys note dont assume uniform distribution plaintexts heres proof let attack ie algorithm taking two inputs f g producing one output h probability p h = hp whenever f = fp g = gekp ie g = gk + p distribution k uniform independent p distribution k + p must also uniform independent p also distribution c uniform independent p hence probability exactly p h = hp whenever f = fp g = gc p c thus fortiori trivial hand onetime pad secure key k used one plaintext ie nontrivial multipleciphertext attacks properly used key k must thrown away one encryption key also called pad explains name onetime pad whats ciphertextonly attack notation ciphertextonly attack one f constant given information gekp0ekpn n ciphertexts attack chance producing information hp0pn plaintexts attack trivial good chance producing hp0pn given gc0cn random c0cn example say gc = c say hp first bit p easily write attackthe guessing attack simply guesses hp <number> attack trivial doesnt use ciphertext fiftyfifty chance guessing correctly matter hand attack rsa produces one bit information p <number> success using c fed random c success rate drops <number> nontrivial attack whats knownplaintext attack classic knownplaintext attack fp0p0 = p0 gc0c0 = c0c0 hp0p0 depending p0 words given two ciphertexts c0 c0 one decryption p0 knownplaintext attack produce information decryption p0 note knownplaintext attacks often defined literature producing information key pointless cryptanalyst generally cares key insofar lets decrypt messages whats chosenplaintext attack chosenplaintext attack first increasingly impractical series active attacks cryptosystem attacks cryptanalyst feeds data encryptor attacks dont fit model passive attacks explained anyway chosenplaintext attack lets cryptanalyst choose plaintext look corresponding ciphertext repeat figured decrypt message absurd examples sort attack chosenkey attack chosensystem attack much important form active attack message corruption attack attacker tries change ciphertext way make useful change plaintext many easy ways throw kinks attacks instance automatically encrypting plaintext p tekht+r+prp timekey sequence number chosen anew message r random number h oneway hash function comma means concatenation plus means exclusiveor mathematical terms say bruteforce attacks consider following knownplaintext attack given plaintexts p0pn<number> ciphertexts c0cn<number> also given ciphertext cn run every key k find k ekpi = ci every < n print dkcn n big enough one key works attack succeed valid inputs time produce correct results blue moon random inputs thus nontrivial attack problem slow many possible keys whats keyguessing attack whats entropy say somebody using onetime padbut isnt choosing keys randomly uniformly mbit messages supposed security proof fact say hes known prefer keys english words cryptanalyst run english words possible keys attack often succeed much faster bruteforce search entire keyspace measure bad key distribution calculating entropy number e number real bits information key cryptanalyst typically happen across key within <number>^e guesses e defined sum pk log0 pk pk probability key k