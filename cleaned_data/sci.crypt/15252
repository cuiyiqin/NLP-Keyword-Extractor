<email> subject cryptography faq <number><number> product ciphers organization crypt cabal lines <number> expires <number> may <number> <number><number><number> gmt replyto <email> nntppostinghost padthaiaktiscom summary part <number> <number> scicrypt faq product ciphers theory security product ciphers differential cryptanalysis des encryption standard nsa role des design des hardware software availability xlastupdated <number><number><number> archivename cryptographyfaqpart00 lastmodified <number><number><number> faq scicrypt part <number> product ciphers fifth ten parts scicrypt faq parts mostly independent read first part rest dont time send missing parts mail dont ask notes kah00 refer reference list last part sections faq available via anonymous ftp rtfmmitedu pubusenetnewsanswerscryptographyfaqpartxx cryptography faq posted newsgroups scicrypt scianswers newsanswers every <number> days contents product cipher makes product cipher secure grouptheoretic properties product ciphers proven security product cipher block ciphers used encrypt data longer block size symmetric block ciphers used message authentication exactly des triple des differential cryptanalysis nsa involved design des des available software des available hardware des used protect classified information ecb cbc cfb ofb encryption product cipher product cipher block cipher iterates several weak operations substitution transposition modular additionmultiplication linear transformation block cipher means cipher encrypts block data<number> bytes sayall goes next block notion product ciphers due shannon sha00 examples modern product ciphers include lucifer sor00 des nbs00 spnetworks kam00 loki bro00 feal shi00 pes lai00 khufu khafre me00a socalled feistel ciphers class product ciphers operate one half ciphertext round swap ciphertext halves round lucifer des loki feal examples feistel ciphers following table compares main parameters several product ciphers cipher | block length | key bits | number rounds lucifer <number> <number> <number> des <number> <number> <number> loki <number> <number> <number> feal <number> <number> <number>^x x >= <number> pes <number> <number> <number> makes product cipher secure nobody knows prove mathematically product cipher completely secure practice one begins demonstrating cipher looks highly random example cipher must nonlinear must produce ciphertext functionally depends every bit plaintext key meyer mey00 shown least <number> rounds des required guarantee dependence sense product cipher act mixing function combines plaintext key ciphertext complex nonlinear fashion fixed perround substitutions product cipher referred sboxes example lucifer <number> sboxes des <number> sboxes nonlinearity product cipher reduces careful design sboxes list partial design criteria sboxes des apply sboxes general may found brown bro00 brickell et al bri00 grouptheoretic properties product ciphers let e product cipher maps nbit blocks nbit blocks let ekx encryption x key k fixed k map sending x ekx permutation set nbit blocks denote permutation pk set nbit permutations called symmetric group written <number>^n collection permutations pk k ranges possible keys denoted es<number>^n e random mapping plaintexts ciphertexts would expect es<number>^n generate large subset <number>^n coppersmith grossman cop00 shown simple product cipher generate alternating group <number>^n given sufficient number rounds alternating group half symmetric group consists even permutations ie permutations written even number swaps even goldreich eve00 able extend results show feistel ciphers generate <number>^n given sufficient number rounds security multiple encipherment also depends grouptheoretic properties cipher multiple encipherment extension single encipherment keys k0 k0 exist third key k0 ek0ek0x == ek0x indicates encrypting twice two independent keys k0 k0 equal single encryption third key k0 every k0 k0 exists k0 eq true say e group question whether des group definition extensively studied sherman kaliski rivest she00 paper give strong evidence hypothesis des group fact des group cam00 proven security product cipher recall pk permutation produced e key k goal designer e ensure pk appears random element <number>^n symmetric group let r element <number>^n selected randomly say pk r indistinguishable observer given pk r order cannot distinguish two permutations polynomial time time bounded resources observer cannot determine permutations produced e optimal decision better simply guessing luby rackoff lub00 shown class feistel ciphers secure sense round mapping replaced random boolean functions block ciphers used encrypt data longer block size four standard modes operation numerous nonstandard ones well standard modes operation defined us department commerce federal information processing standard fips <number> published <number> see question ecb details although defined des block cipher modes operation used block cipher symmetric block ciphers used message authentication one may use symmetric cryptosystem block cipher prove generate message prove whether message altered unaltered since generation one cannot prove things another without revealing key thereafter key cannot used prove anything messages authenticated using key see ansi x0<phone> fips <number> <number> standard method message authentication using des exactly des des us governments data encryption standard product cipher operates <number>bit blocks data using <number>bit key defined fips <number><number> <number> supersedes fips <number> <number> fips federal information processing standards published ntis des identical ansi standard data encryption algorithm dea defined ansi x000<number> triple des triple des product cipher like des operates <number>bit data blocks several forms uses des cipher <number> times forms use two <number>bit keys use three des modes operation may also used tripledes people refer ek0dk0ek0x tripledes method defined chapter <number> ansi standard x000<number> financial institution key management intended use encrypting des keys ivs automated key distribution formal name encryption decryption single key key pair referenced standards documents ede standard says section <number>0 key encrypting keys may single dea key dea key pair key pairs shoud used additional security needed eg data protected keys long security life key pair shall encrypted decrypted using single key others use term tripledes ek0dk0ek0x ek0ek0ek0x one us carl ellison keeps advocating des triple use form ek0 tran ek0 tran ek0 compress x des instance key iv cbc mode tran posted scicrypt largeblock transposition program taking key data stream encryption program part differential cryptanalysis differential cryptanalysis statistical attack applied iterated mapping ie mapping based repeated round function method recently popularized biham shamir bih00 coppersmith remarked sboxes des optimized attack <number> years ago method proved effective several product ciphers notably feal bi00a differential cryptanalysis based observing large number ciphertexts y y whose corresponding plaintexts x x satisfy known difference d = x+x + componentwise xor basic bihamshamir attack <number>^<number> plaintext pairs required determine key des substantially fewer pairs required des truncated <number> <number> rounds cases actual key recovered matter minutes using thousand pairs full des attack impractical requires many known plaintexts work biham shamir des revealed several startling observations algorithm importantly key schedule removed des <number><number> = <number>bit key used key could recovered less <number>^<number> steps thus independent subkeys add substantial security des sboxes des extremely sensitive changing even single entries tables yields significant improvement differential attack adi shamir quoted say nytimes oct <number> <number> would say contrary people believe evidence tampering des basic design weakened nsa involved design des according kinnucan kin00 tuchman member group developed des ibm quoted saying developed des algorithm entirely within ibm using ibmers nsa dictate single wire tuchman meyer another developer des spent year breaking ciphers finding weaknesses lucifer spent two years strengthening lucifer basic approach look strong substitution permutation key scheduling functions ibm classified notes containing selection criteria request nsa nsa told us inadvertently reinvented deep secrets uses make algorithms explains tuchman hand document called involvement nsa development des unclassified summary united states select committee intelligence printed ieee communications magazine p00<number> <number> states development des nsa convinced ibm reduced keysize sufficient indirectly assisted development sbox structures certified final des algorithm best knowledge free statistical mathematical weakness clearly key size reduced insistence nsa article states nsa tamper algorithm parameters sense resolves apparent conflict remarks meyer tuchman presented des available software several people made des code available via ftp see part <number> pathnames stig ostholm ftpso bsd ftpbk eric young ftpey dennis furguson ftpdf mark riordan ftpmr phil karn ftppk pascal listing des also given patterson pat00 fips <number><number> says algorithm specified standard implemented using hardware software technology software implementations general purpose computers compliance standard despite software implementations abound used government agencies des available hardware following paragraphs quoted messages sent editors dont vouch quality even existence products chip rosenthal says dallas semiconductor makes des encryptiondecryption device use standard digital 00kbps pcm telecom data streams capable processing data real time eg one sampleframe ds0000 phone number <phone> would probably need talk dewight telecom marketing christian franke <email> says <number> cryptech cry00c000 <number>0mbits according data sheet <number> bit interface use one one available started project problems <number> pijnenburg pcc000 00mbits according data sheet address pijnenburg bv boxtelswweg <number> nl<number> ne vught netherlands <number> infosys des chip germany sboxes must loaded software modify algorithm sorry dont data sheet handy please email need information <email> marcus j ranum says supercrypt 000mbsec faster des proprietary storage <number> <number>bit keys key stream generator integrated hardware des0 procedure extended mode <number> bit keys computer elektronik infosys <number> herndon parkway herndon va <number> <phone> <email> tim hember says newbridge microsystems sells am0000 compatible des chip operates 00mhz performs round encryption <number> clocks threestage pipeline supports ecb cbc cfb<number> >>> cfb<number> <<<< reasonable priced opposed highend des chips call newbridge microsystems ottawa <phone> importexport issues canada us require custom des public key ics timestep engineering developed newbridges crypto chips ics commercial educational establishments reached <phone> des used protect classified information des intended protect classified data fips <number><number> says standard used federal departments agencies cryptographic protection computer data following conditions apply <number> cryptographic protection required <number> data classified according national security act <number> amended atomic energy act <number> amended ecb cbc cfb ofb encryption methods using block ciphers des encrypt messages files blocks data known modes operation four modes operation defined fips <number> <number> december <number> also ansi x0<phone> fips <number> specifies <number>bit ascii data sent octets unused mostsignificant bit set <number> fips <number> also specifies padding short blocks four des modes operation electronic code book ecb cipher block chaining cbc kbit cipher feedback cfb kbit output feedback ofb methods explained clanguagelike notation symbols pn nth block plaintext input encryption output decryption size block determined mode cn nth block ciphertext output encryption input decryption size block determined mode em des encryption function performed <number>bit block m using <number>key schedule derived <number>bit key dm des decryption function performed <number>bit block m using key schedule em except <number> keys schedule used opposite order em iv <number>bit initialization vector secret value along key shared encryptor decryptor nth value <number>bit variable used modes rn nth value <number>bit variable used modes lsbmk k least significant rightmost bits m eg m <number> << k <number> msbmk k significant leftmost bits m eg m >> <number>k <number> << k <number> = ^ << >> operators defined c langage electronic code book ecb pn cn <number>bits long encryption decryption cn = epn pn = dcn cipher block chaining cbc pn cn <number>bits long encryption decryption c<number> = ep<number>^iv p<number> = dc<number>^iv n><number> cn = epn^cn<number> pn = dcn^cn<number> kbit cipher feedback cfb pn cn k bits long <number> <= k <= <number> encryption decryption <number> = iv <number> = iv n><number> = <number><<k | cn<number> = <number><<k | cn<number> n rn = msbeink rn = msbeink n cn = pn^rn pn = cn^rn note k==<number> reduces <number> = iv <number> = iv n><number> = cn<number> = cn<number> n rn = ein rn = ein n cn = pn^rn pn = cn^rn cfb notes since depends plain cipher text previous operation e function performed parallel reception text used kbit output feedback ofb pn cn k bits long <number> <= k <= <number> encryption decryption <number> = iv <number> = iv n><number> = <number><<k | rn<number> = <number><<k | rn<number> n rn = msbeink rn = msbeink n cn = pn^rn pn = cn^rn note k==<number> reduces <number> = iv <number> = iv n><number> = rn<number> = rn<number> n rn = ein rn = ein n cn = pn^rn pn = cn^rn ofb notes encryption decryption identical since independent p c e function performed advance receipt plaincipher text used additional notes des modes operation ecb cbc use e encrypt d decrypt feedback modes use e encrypt decrypt disproves erroneous claim systems feature e d cannot used data confidentiality therefore subject export controls